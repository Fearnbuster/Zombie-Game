<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>0</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Initialize replica manager

// Data structure that holds all of the replica objects.
mAllReplicaObjects = ds_map_create();

// Data structure that holds all of the replica objects
// that need to be serialized during the next network
// update.
mObjectsToSerialize = ds_queue_create();

// Holds any reusable replica IDs.
mFreeReplicaIDs = ds_list_create();

// Stores the highest replica ID that is currently in use.
mHighestReplicaID = 0;


// Indicator of how many frames should elapse between each 
// update of the replica objects. 
// The replica manager's tps (ticks per second) is equal to the
// the game's fps divided by the update delay (fps/delay).
// Example: If the game runs at 60fps and the replica manager has 
// a 15 frame delay, then the replica manager will send replica 
// updates 4 times per second (60fps/15 frames = 4tps). 
// NOTE: Setting the value here is needed only if this device is 
// the host, otherwise, it is retrieved from the host.
// NOTE: Unless the network bandwith is very low, you should keep 
// the update delay small enough that the replica manager's tps 
// never falls below 10 (a greater value may be preferable).
updateDelay = 15;

// This is the varible that is used to count down the steps 
// between each replica manager update.
updateTimer = 15;

// --------------------------
// Script handles: 
// Used when creating a new replica object on the network.
constructReplicaObject = scr_constructReplicaObject;

// Used when destruct a replica object that is already on
// the network.
destructReplicaObject = scr_destructReplicaObject;
 
// Used when serializing a replica object that is already on
// the network.
serializeReplicaObject = scr_serializeReplicaObject;

// Used when performing a network update (updating all of 
// the replica objects).
updateReplicaNetwork = scr_updateReplicaNetwork;



</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Update cycle

updateTimer -= 1;

// --------------------------
if (updateTimer &lt;= 0)
{
    scr_updateReplicaNetwork(self);
    
    // --------------------------
    updateTimer = updateDelay; // reset timer
}


</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
